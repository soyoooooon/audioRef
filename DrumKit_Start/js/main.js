(() => {
	console.log('Trevor');

	function logKeyCode(event){

	 // event is an object that is generated by any event
	 // it contains all of the info about the event, what
	 // element triggered it, where it occurred on the page etc
	 console.log(event.keyCode);
	 const currentKey = document.querySelector(`div[data-key="${event.keyCode}"]`);

	 if (!currentKey) { return; }
	 	//if there's no matching div with that key, then
	 	currentKey.classList.add('playing');


	 let currentAudioClip = document.querySelector(`audio[data-key="${event.keyCode}"]`);
	 currentAudioClip.currentTime = 0;
	 currentAudioClip.play();
	}

	function removePlayingClass(event) {
		// listen for the transition to end, and then remove the playing class from the current key

		// I need a transition that only fires once so that I only run this function once
		if (event.propertyName !== "transform") { return; } 

		  console.log('transforms');
		  event.target.classList.remove('playing');
		}
	

	const keys = Array.from(document.querySelectorAll('.key'));
	keys.forEach(key => key.addEventListener('transitionend', removePlayingClass));


//try to get the keyboard keypress events
window.addEventListener("keydown", logKeyCode);

})();